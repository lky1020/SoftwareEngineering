/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package patient;

import Class.Medicine;
import Class.Patient;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.Home;

/**
 *
 * @author User
 */
public class PatientPayment extends javax.swing.JFrame {

    private List<Patient> patientOnHoldList = new ArrayList<>();
    private Patient oldPatient;
    private Patient patient;
    private String staffName;
    private javax.swing.JFrame frame;
    private DefaultTableModel medicinePaymentModel;
    private List<Medicine> medicinePaymentList = new ArrayList<>();;
    private double sst = 0.0;
    private double totalBeforeSST = 0.0;
    private double totalAfterSST = 0.0;
    
    /**
     * Creates new form PatientPayment
     */
    public PatientPayment() {
        initComponents();
    }
    
    public PatientPayment(String staffName, Patient patient, javax.swing.JFrame frame, List<Patient> patientOnHoldList, List<Medicine> medicinePaymentList) {
        initComponents();
        
        this.staffName = staffName;
        
        oldPatient = new Patient(patient.getIcNo(), patient.getIc(), patient.getName(), patient.getMobileNo(), patient.getDateCreated(), patient.getMedicalDescription());
        this.patient = patient;
        
        this.frame = frame;
        this.patientOnHoldList = patientOnHoldList;
        this.medicinePaymentList = medicinePaymentList;
        
        this.patientPaymentTitleLabel.setText(this.patientPaymentTitleLabel.getText() + this.patient.getName());
        
        //add consultation fee
        medicinePaymentList.add(new Medicine(0, "Consultation Fee", 1, 10.00, ""));
        
        //Set table model
        medicinePaymentModel = (DefaultTableModel)patientPaymentTable.getModel();
        
        //calculate total
        for(int i = 0; i < medicinePaymentList.size(); i++){
            
            totalBeforeSST += medicinePaymentList.get(i).getUnitPrice();
            
        }
        
        medicinePaymentList.add(new Medicine(0, "Total Before SST", 1, totalBeforeSST, ""));
        medicinePaymentList.add(new Medicine(0, "", 0, 0, ""));
        
        //calculate sst
        sst = totalBeforeSST * 0.06;
        totalAfterSST = totalBeforeSST + sst;
        
        //add sst and totalAfterSST to the medicinePaymentList
        medicinePaymentList.add(new Medicine(0, "6% SST", 1, sst, ""));
        medicinePaymentList.add(new Medicine(0, "Total After SST", 1, totalAfterSST, ""));

        setMedicinePaymentModelRow(medicinePaymentList);
    }

    private void setMedicinePaymentModelRow(List<Medicine> medicinePaymentList){

        medicinePaymentModel.setRowCount(0);
        
        String nameStr = "";
        String priceStr = "";
        
        for(int i = 0; i < medicinePaymentList.size(); i++){
            
            if(medicinePaymentList.get(i).getId() == 0){
                if(medicinePaymentList.get(i).getMedicineName().equals("Total Before SST") || medicinePaymentList.get(i).getMedicineName().equals("Total After SST") && medicinePaymentList.get(i).getUnitPrice() != 0){
                    nameStr += "<html> <b>";
                    nameStr += medicinePaymentList.get(i).getMedicineName();
                    nameStr += "</b> </html>";
                    
                    priceStr += "<html> <b>";
                    priceStr += String.format("%05.2f", medicinePaymentList.get(i).getUnitPrice());
                    priceStr += "</b> </html>";
                    
                    medicinePaymentModel.addRow(new Object[]{"", "", nameStr, priceStr});
                    
                    nameStr = "";
                    priceStr = "";
                }
                else if(medicinePaymentList.get(i).getUnitPrice() == 0){
                    medicinePaymentModel.addRow(new Object[]{"", "", "", ""});
                }
                else{
                    medicinePaymentModel.addRow(new Object[]{"", "", medicinePaymentList.get(i).getMedicineName(), String.format("%05.2f", medicinePaymentList.get(i).getUnitPrice())});
                }
                
            }
            else{
                medicinePaymentModel.addRow(new Object[]{i + 1 + ".", medicinePaymentList.get(i).getId(), medicinePaymentList.get(i).getMedicineName(), String.format("%05.2f", medicinePaymentList.get(i).getUnitPrice())});
            }

        }   
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientPaymentTitleLabel = new javax.swing.JLabel();
        patientPaymentPaymentListLabel = new javax.swing.JLabel();
        patientPaymentScrollPane = new javax.swing.JScrollPane();
        patientPaymentTable = new javax.swing.JTable();
        patientPaymentPayButton = new javax.swing.JButton();
        patientPaymentCancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        patientPaymentTitleLabel.setFont(new java.awt.Font(".Heiti J", 1, 24)); // NOI18N
        patientPaymentTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        patientPaymentTitleLabel.setText("Payment of ");

        patientPaymentPaymentListLabel.setFont(new java.awt.Font(".Heiti J", 1, 18)); // NOI18N
        patientPaymentPaymentListLabel.setText("Payment List");
        patientPaymentPaymentListLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));

        patientPaymentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "ID", "Name", "Price (RM)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientPaymentScrollPane.setViewportView(patientPaymentTable);
        if (patientPaymentTable.getColumnModel().getColumnCount() > 0) {
            patientPaymentTable.getColumnModel().getColumn(0).setPreferredWidth(20);
            patientPaymentTable.getColumnModel().getColumn(1).setPreferredWidth(30);
        }

        patientPaymentPayButton.setFont(new java.awt.Font(".Heiti J", 1, 18)); // NOI18N
        patientPaymentPayButton.setText("Pay");
        patientPaymentPayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientPaymentPayButtonActionPerformed(evt);
            }
        });

        patientPaymentCancelButton.setFont(new java.awt.Font(".Heiti J", 1, 18)); // NOI18N
        patientPaymentCancelButton.setText("Cancel");
        patientPaymentCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientPaymentCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(patientPaymentTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(patientPaymentScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(patientPaymentPaymentListLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(patientPaymentPayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(patientPaymentCancelButton)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(patientPaymentTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(patientPaymentPaymentListLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(patientPaymentScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patientPaymentPayButton)
                    .addComponent(patientPaymentCancelButton))
                .addGap(20, 20, 20))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void patientPaymentPayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientPaymentPayButtonActionPerformed
        // TODO add your handling code here:
        double pay = -1;
        
        try{

            pay = Double.parseDouble(JOptionPane.showInputDialog("Amount Receive(RM) : "));

        }catch(NumberFormatException e){
            
            JOptionPane.showMessageDialog(null, "Please Enter Currency Only (eg xx.xx)!!!", "Invalid Amount Receive", JOptionPane.ERROR_MESSAGE);
            
        }catch(NullPointerException e){
            
        }

        if(pay > -1 && pay < totalAfterSST){
            JOptionPane.showMessageDialog(null, "Please Receive Sufficient Amount !!!", "Amount Receive Not Sufficient", JOptionPane.ERROR_MESSAGE);
        }

        
        if(pay >= totalAfterSST){
            
            JOptionPane.showMessageDialog(null, "Payment Completed & Receipt Generated !!!", "Sufficient Amount", JOptionPane.INFORMATION_MESSAGE);
            Home home = new Home(staffName, patientOnHoldList);
            home.setVisible(true);
            frame.dispose();
            this.dispose();
        }

    }//GEN-LAST:event_patientPaymentPayButtonActionPerformed

    private void patientPaymentCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientPaymentCancelButtonActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Cancel Payment !!!", "Payment", JOptionPane.INFORMATION_MESSAGE);
        
        Home home = new Home(staffName, patientOnHoldList);
        home.setVisible(true);
        frame.dispose();
        this.dispose();
    }//GEN-LAST:event_patientPaymentCancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientPayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton patientPaymentCancelButton;
    private javax.swing.JButton patientPaymentPayButton;
    private javax.swing.JLabel patientPaymentPaymentListLabel;
    private javax.swing.JScrollPane patientPaymentScrollPane;
    private javax.swing.JTable patientPaymentTable;
    private javax.swing.JLabel patientPaymentTitleLabel;
    // End of variables declaration//GEN-END:variables
}
