/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package staff;

/**
 *
 * @author IM10
 */
import main.Home;
import Class.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

public class staffModify extends javax.swing.JFrame {
 private StaffValidation validate1 = new StaffValidation();
    private List<Staff> staffList;
    private Staff modifyStaff;
    private Staff staff;
    private String staffName;
    private javax.swing.JFrame frame;
    /**
     * Creates new form staffModify
     */
    public staffModify() {
        initComponents();
    }
    public staffModify(String staffName, Staff staff, javax.swing.JFrame frame) {
        initComponents();
        this.staffName = staffName;
        
        modifyStaff = new Staff(staff.getId(), staff.getName(),staff.getDesignation(), staff.getMobileNo(), staff.getDateJoined());
        this.staff = staff;
        
        this.frame = frame;
        
        //set the background to transparen
        //set the background to transparent
        idOldTextField.setBackground(new java.awt.Color(0, 0, 0, 1));
        idNewTextField.setBackground(new java.awt.Color(0, 0, 0, 1));
        nameOldTextField.setBackground(new java.awt.Color(0, 0, 0, 1));
        nameNewTextField.setBackground(new java.awt.Color(0, 0, 0, 1));
        mobileNoOldTextField.setBackground(new java.awt.Color(0, 0, 0, 1));
        mobileNoNewTextField.setBackground(new java.awt.Color(0, 0, 0, 1));
        designationOldTextField.setBackground(new java.awt.Color(0, 0, 0, 1));
        designationNewTextField.setBackground(new java.awt.Color(0, 0, 0, 1));
        
        //Initialize patient old info
        int id = 0;
        String myString= Integer.toString(id);
        idNewTextField.setText(myString);
        nameOldTextField.setText(staff.getName());
        designationOldTextField.setText(staff.getDesignation());
        mobileNoOldTextField.setText(staff.getMobileNo());
        
    }

    public staffModify(String staffName, Staff staff, Home aThis) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        idNewTextField = new javax.swing.JTextField();
        nameNewTextField = new javax.swing.JTextField();
        designationNewTextField = new javax.swing.JTextField();
        mobileNoNewTextField = new javax.swing.JTextField();
        idOldTextField = new javax.swing.JTextField();
        nameOldTextField = new javax.swing.JTextField();
        designationOldTextField = new javax.swing.JTextField();
        mobileNoOldTextField = new javax.swing.JTextField();
        modifyButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enter the information that you modify");

        jLabel2.setText("     Id:");

        jLabel3.setText("Name:");

        jLabel4.setText("Designation:");

        jLabel5.setText("MobileNo:");

        mobileNoNewTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileNoNewTextFieldActionPerformed(evt);
            }
        });

        designationOldTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                designationOldTextFieldActionPerformed(evt);
            }
        });

        mobileNoOldTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileNoOldTextFieldActionPerformed(evt);
            }
        });

        modifyButton.setText("Modify");
        modifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idNewTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(idOldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameNewTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nameOldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mobileNoNewTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mobileNoOldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(designationNewTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(designationOldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(119, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(modifyButton)
                .addGap(26, 26, 26)
                .addComponent(cancelButton)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idNewTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idOldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nameNewTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameOldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(designationNewTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(designationOldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(mobileNoNewTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mobileNoOldTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modifyButton)
                    .addComponent(cancelButton))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mobileNoNewTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileNoNewTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileNoNewTextFieldActionPerformed

    private void designationOldTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_designationOldTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_designationOldTextFieldActionPerformed

    private void mobileNoOldTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileNoOldTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileNoOldTextFieldActionPerformed

    private void modifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyButtonActionPerformed
        // TODO add your handling code here:
        
        boolean modifySuccess = false;
        
        //ID only
        if(!idNewTextField.getText().equals("") && nameNewTextField.getText().equals("")&& designationNewTextField.getText().equals("") && mobileNoNewTextField.getText().equals("")){
            
            if(validate1.validateID(idNewTextField.getText())){
                int id = Integer.parseInt(idNewTextField.getText());

                
                staff.setId(id);
               // staff.setId(idNewTextField.getText().substring(5));
                
                modifySuccess = true;
                
            }else{
                
                JOptionPane.showMessageDialog(null, "Invalid Id Format, Please Enter Again !!! \n Format : xxxxxx", "Invalid Id Format", JOptionPane.ERROR_MESSAGE);
            
            }
        }
        //Name only
        else if(idNewTextField.getText().equals("") && !nameNewTextField.getText().equals("") && designationNewTextField.getText().equals("")&& mobileNoNewTextField.getText().equals("")){
            
            if(validate1.validateName(nameNewTextField.getText())){
                
                staff.setname(nameNewTextField.getText());
                
                modifySuccess = true;
                
            }else{
                
                JOptionPane.showMessageDialog(null, "Invalid Name, Please Enter Again Entered !!!", "Invalid Name", JOptionPane.ERROR_MESSAGE);
            
            }
        }
        //Mobile no only
        else if(idNewTextField.getText().equals("") && nameNewTextField.getText().equals("") && designationNewTextField.getText().equals("")&& !mobileNoNewTextField.getText().equals("")){
            
            if(validate1.validateMobileNo(mobileNoNewTextField.getText())){
                
                staff.setMobileNo(mobileNoNewTextField.getText());
                
                modifySuccess = true;
                
            }else{
                
                JOptionPane.showMessageDialog(null, "Invalid Mobile No Format, Please Enter Again!!! \n Format : xxx-xxxxxxx", "Invalid Mobile No Format", JOptionPane.ERROR_MESSAGE);
                
            }
        }
        //IC, Name
        else if(!idNewTextField.getText().equals("") && !nameNewTextField.getText().equals("")&& designationNewTextField.getText().equals("") && mobileNoNewTextField.getText().equals("")){
            
            if(validate1.validateID(idNewTextField.getText()) && validate1.validateName(nameNewTextField.getText())){
                int id = Integer.parseInt(idNewTextField.getText().substring(5));
                
                staff.setId(id);
                //staff.setId(idNewTextField.getText());
                staff.setname(nameNewTextField.getText());

                modifySuccess = true;
                
            }else{
                
                if(validate1.validateID(idNewTextField.getText()) != true){
                    
                    JOptionPane.showMessageDialog(null, "Invalid Id Format, Please Enter Again !!! \n Format : xxxxxx", "Invalid Id Format", JOptionPane.ERROR_MESSAGE);
                
                }
                
                if(validate1.validateName(nameNewTextField.getText()) != true){
                    
                    JOptionPane.showMessageDialog(null, "Invalid Name, Please Enter Again Entered !!!", "Invalid Name", JOptionPane.ERROR_MESSAGE);
                    
                }
                
            }
        }
        //IC, Mobile No
        else if(!idNewTextField.getText().equals("") && nameNewTextField.getText().equals("") && designationNewTextField.getText().equals("")&& !mobileNoNewTextField.getText().equals("")){
            
            if(validate1.validateID(idNewTextField.getText()) && validate1.validateMobileNo(mobileNoNewTextField.getText())){
                int id = Integer.parseInt(idNewTextField.getText().substring(5));
                
                staff.setId(id);
                //staff.setId(idNewTextField.getText());
                staff.setMobileNo(mobileNoNewTextField.getText());
                
                modifySuccess = true;
                
            }else{
                
                if(validate1.validateID(idNewTextField.getText()) != true){
                    
                    JOptionPane.showMessageDialog(null, "Invalid Id Format, Please Enter Again !!! \n Format : xxxxxx", "Invalid Id Format", JOptionPane.ERROR_MESSAGE);
                
                }
                
                if(validate1.validateMobileNo(mobileNoNewTextField.getText()) != true){
                    
                    JOptionPane.showMessageDialog(null, "Invalid Mobile No Format, Please Enter Again!!! \n Format : xxx-xxxxxxx", "Invalid Mobile No Format", JOptionPane.ERROR_MESSAGE);
                    
                }
                
            }
        }
        //Name, Mobile No
        else if(idNewTextField.getText().equals("") && !nameNewTextField.getText().equals("") && designationNewTextField.getText().equals("")&& !mobileNoNewTextField.getText().equals("")){
            
            if(validate1.validateName(nameNewTextField.getText()) && validate1.validateMobileNo(mobileNoNewTextField.getText())){
                
                staff.setname(nameNewTextField.getText());
                staff.setMobileNo(mobileNoNewTextField.getText());
                
                modifySuccess = true;
                
            }else{
                
                if(validate1.validateName(nameNewTextField.getText()) != true){
                    
                    JOptionPane.showMessageDialog(null, "Invalid Name, Please Enter Again Entered !!!", "Invalid Name", JOptionPane.ERROR_MESSAGE);
                    
                }
                
                if(validate1.validateMobileNo(mobileNoNewTextField.getText()) != true){
                    
                    JOptionPane.showMessageDialog(null, "Invalid Mobile No Format, Please Enter Again!!! \n Format : xxx-xxxxxxx", "Invalid Mobile No Format", JOptionPane.ERROR_MESSAGE);
                    
                }
                
            }
        }
        //IC, Name, Mobile No
        else if(!idNewTextField.getText().equals("") && !nameNewTextField.getText().equals("")&& designationNewTextField.getText().equals("") && !mobileNoNewTextField.getText().equals("")){
            
            if(validate1.validateID(idNewTextField.getText()) && validate1.validateName(nameNewTextField.getText()) && validate1.validateMobileNo(mobileNoNewTextField.getText())){
                int id = Integer.parseInt(idNewTextField.getText().substring(5));
                
                
                staff.setId(id);
                staff.setname(nameNewTextField.getText());
                staff.setMobileNo(mobileNoNewTextField.getText());

                modifySuccess = true;
 
            }else{
                
                if(validate1.validateID(idNewTextField.getText()) != true){
                    
                    JOptionPane.showMessageDialog(null, "Invalid ID Format, Please Enter Again !!! \n Format : xxxxxx", "Invalid ID Format", JOptionPane.ERROR_MESSAGE);
                
                }
                
                if(validate1.validateName(nameNewTextField.getText()) != true){
                    
                    JOptionPane.showMessageDialog(null, "Invalid Name, Please Enter Again Entered !!!", "Invalid Name", JOptionPane.ERROR_MESSAGE);
                    
                }
                
                if(validate1.validateMobileNo(mobileNoNewTextField.getText()) != true){
                    
                    JOptionPane.showMessageDialog(null, "Invalid Mobile No Format, Please Enter Again!!! \n Format : xxx-xxxxxxx", "Invalid Mobile No Format", JOptionPane.ERROR_MESSAGE);
                    
                }
                
            }
        }
        //No Input
        else if(idNewTextField.getText().equals("") && nameNewTextField.getText().equals("") && designationNewTextField.getText().equals("")&& mobileNoNewTextField.getText().equals("")){
            
            JOptionPane.showMessageDialog(null, "Please Enter Id / Name / Mobile No of staff to modify !!!", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            
        }
        
        if(modifySuccess){
            Home home = new Home(staffName, modifyStaff, staff);
            home.setVisible(true);
            frame.dispose();
            this.dispose();
        }
    }//GEN-LAST:event_modifyButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
            // TODO add your handling code here:
       Home home = new Home(staffName, modifyStaff, staff);
        home.setVisible(true);
        frame.dispose();
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
static int xx, yy;
    private void frameTitleMousePressed(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        xx = evt.getX();
        yy = evt.getY();
    }                                       

    private void frameTitleMouseDragged(java.awt.event.MouseEvent evt) {                                        
        // TODO add your handling code here:
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x-xx, y-yy);
    } 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(staffModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(staffModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(staffModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(staffModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
           /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(staffModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(staffModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(staffModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(staffModify.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new staffModify().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField designationNewTextField;
    private javax.swing.JTextField designationOldTextField;
    private javax.swing.JTextField idNewTextField;
    private javax.swing.JTextField idOldTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField mobileNoNewTextField;
    private javax.swing.JTextField mobileNoOldTextField;
    private javax.swing.JButton modifyButton;
    private javax.swing.JTextField nameNewTextField;
    private javax.swing.JTextField nameOldTextField;
    // End of variables declaration//GEN-END:variables
}
